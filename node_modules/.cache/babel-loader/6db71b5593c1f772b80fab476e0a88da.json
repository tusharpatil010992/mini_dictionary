{"ast":null,"code":"var _jsxFileName = \"/Users/tusharpatil/Sites/mini-dictionary/src/component/Display.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Display = _ref => {\n  let {\n    data\n  } = _ref;\n  // console.log(data)\n  const {\n    loader,\n    resp,\n    err\n  } = data;\n  let results = [];\n\n  if (resp.length) {\n    for (let eachResp of resp) {\n      if (eachResp.meanings) {\n        for (let grpMeaning of eachResp.meanings) {\n          const {\n            partOfSpeech,\n            definitions\n          } = grpMeaning;\n          console.log(`key is ${partOfSpeech}`);\n          results.push({\n            partOfSpeech: definitions\n          });\n        }\n      }\n    }\n  }\n\n  console.log(`Final results are ${results}`);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12\",\n      children: loader ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 31\n      }, this) : resp ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: resp.map(section => {\n          if (section.meanings) {\n            section.meanings.map(type => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: type === null || type === void 0 ? void 0 : type.partOfSpeech\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: type === null || type === void 0 ? void 0 : type.definitions.map(res => {\n                    return /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: res.definition\n                    }, res.definition, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 41,\n                      columnNumber: 72\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true);\n            });\n          }\n        })\n      }, void 0, false) : err ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: err\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 36\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Display;\nexport default Display;\n\nvar _c;\n\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"names":["React","Display","data","loader","resp","err","results","length","eachResp","meanings","grpMeaning","partOfSpeech","definitions","console","log","push","map","section","type","res","definition"],"sources":["/Users/tusharpatil/Sites/mini-dictionary/src/component/Display.js"],"sourcesContent":["import React from 'react'\n\nconst Display = ({ data }) => {\n\n    // console.log(data)\n\n    const { loader, resp, err } = data\n    let results = []\n    if(resp.length){\n        for(let eachResp of resp){\n            if(eachResp.meanings){\n                for(let grpMeaning of eachResp.meanings){\n\n                    const {partOfSpeech,definitions} = grpMeaning\n                    console.log(`key is ${partOfSpeech}`)\n                    results.push({partOfSpeech:definitions})\n                }\n            }\n        }\n    }\n    console.log(`Final results are ${results}`)\n    return (\n        <div className='row'>\n            <div className='col-12'>\n                {\n                    loader ? (<div>Loading....</div>) :\n\n                        resp ? (\n\n                            <>\n                            {\n                                resp.map(section => {\n                                    if (section.meanings) {\n                                        section.meanings.map(type => {\n                                            return (\n                                                <>\n                                                    <h6>{type?.partOfSpeech}</h6>\n                                                    <ul>\n                                                        {\n                                                            type?.definitions.map(res => {\n                                                                return <li key={res.definition}>{res.definition}</li>\n                                                            })\n                                                        }\n                                                    </ul>\n                                                </>\n                                            )\n                                        })\n                                    }\n                                })\n                            }\n                            </>\n\n\n                        ) :\n\n                            err ? (<div>{err}</div>) : null\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Display\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,OAAO,GAAG,QAAc;EAAA,IAAb;IAAEC;EAAF,CAAa;EAE1B;EAEA,MAAM;IAAEC,MAAF;IAAUC,IAAV;IAAgBC;EAAhB,IAAwBH,IAA9B;EACA,IAAII,OAAO,GAAG,EAAd;;EACA,IAAGF,IAAI,CAACG,MAAR,EAAe;IACX,KAAI,IAAIC,QAAR,IAAoBJ,IAApB,EAAyB;MACrB,IAAGI,QAAQ,CAACC,QAAZ,EAAqB;QACjB,KAAI,IAAIC,UAAR,IAAsBF,QAAQ,CAACC,QAA/B,EAAwC;UAEpC,MAAM;YAACE,YAAD;YAAcC;UAAd,IAA6BF,UAAnC;UACAG,OAAO,CAACC,GAAR,CAAa,UAASH,YAAa,EAAnC;UACAL,OAAO,CAACS,IAAR,CAAa;YAACJ,YAAY,EAACC;UAAd,CAAb;QACH;MACJ;IACJ;EACJ;;EACDC,OAAO,CAACC,GAAR,CAAa,qBAAoBR,OAAQ,EAAzC;EACA,oBACI;IAAK,SAAS,EAAC,KAAf;IAAA,uBACI;MAAK,SAAS,EAAC,QAAf;MAAA,UAEQH,MAAM,gBAAI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAJ,GAEFC,IAAI,gBAEA;QAAA,UAEIA,IAAI,CAACY,GAAL,CAASC,OAAO,IAAI;UAChB,IAAIA,OAAO,CAACR,QAAZ,EAAsB;YAClBQ,OAAO,CAACR,QAAR,CAAiBO,GAAjB,CAAqBE,IAAI,IAAI;cACzB,oBACI;gBAAA,wBACI;kBAAA,UAAKA,IAAL,aAAKA,IAAL,uBAAKA,IAAI,CAAEP;gBAAX;kBAAA;kBAAA;kBAAA;gBAAA,QADJ,eAEI;kBAAA,UAEQO,IAFR,aAEQA,IAFR,uBAEQA,IAAI,CAAEN,WAAN,CAAkBI,GAAlB,CAAsBG,GAAG,IAAI;oBACzB,oBAAO;sBAAA,UAA0BA,GAAG,CAACC;oBAA9B,GAASD,GAAG,CAACC,UAAb;sBAAA;sBAAA;sBAAA;oBAAA,QAAP;kBACH,CAFD;gBAFR;kBAAA;kBAAA;kBAAA;gBAAA,QAFJ;cAAA,gBADJ;YAYH,CAbD;UAcH;QACJ,CAjBD;MAFJ,iBAFA,GA4BAf,GAAG,gBAAI;QAAA,UAAMA;MAAN;QAAA;QAAA;QAAA;MAAA,QAAJ,GAAwB;IAhC3C;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAuCH,CA1DD;;KAAMJ,O;AA4DN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}