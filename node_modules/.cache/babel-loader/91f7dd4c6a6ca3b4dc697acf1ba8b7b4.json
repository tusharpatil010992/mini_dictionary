{"ast":null,"code":"var _jsxFileName = \"/Users/tusharpatil/Sites/mini-dictionary/src/component/Display.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Display = _ref => {\n  let {\n    data\n  } = _ref;\n  // console.log(data)\n  const {\n    loader,\n    resp,\n    err\n  } = data;\n  let results = [];\n\n  if (resp.length) {\n    for (let eachResp of resp) {\n      if (eachResp.meanings) {\n        for (let grpMeaning of eachResp.meanings) {\n          const {\n            partOfSpeech,\n            definitions\n          } = grpMeaning;\n          let newObj = {\n            'partOfSpeech': partOfSpeech,\n            'definitions': definitions\n          };\n          results.push(newObj);\n        }\n      }\n    }\n  }\n\n  return loader ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 22\n  }, this) : results ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12\",\n      children: results.map((key, index) => {\n        return /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"h6\",\n          children: key.partOfSpeech\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_c = Display;\nexport default Display;\n\nvar _c;\n\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"names":["React","Display","data","loader","resp","err","results","length","eachResp","meanings","grpMeaning","partOfSpeech","definitions","newObj","push","map","key","index"],"sources":["/Users/tusharpatil/Sites/mini-dictionary/src/component/Display.js"],"sourcesContent":["import React from 'react'\n\nconst Display = ({ data }) => {\n\n    // console.log(data)\n\n    const { loader, resp, err } = data\n    let results = []\n    if (resp.length) {\n        for (let eachResp of resp) {\n            if (eachResp.meanings) {\n                for (let grpMeaning of eachResp.meanings) {\n                    const { partOfSpeech, definitions } = grpMeaning\n                    let newObj = {\n                        'partOfSpeech': partOfSpeech,\n                        'definitions': definitions\n                    }\n                    results.push(newObj)\n                }\n            }\n        }\n    }\n\n    return loader ? (<div>Loading</div>) :\n        results ? (\n            <div className='row'>\n                <div className='col-12'>\n                    {results.map((key, index) => {\n                        return (\n                            <h6 className='h6' key={index}>{key.partOfSpeech}</h6>\n                        )\n                    })}\n                </div>\n            </div>\n        ) : (<></>)\n\n}\n\nexport default Display\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,OAAO,GAAG,QAAc;EAAA,IAAb;IAAEC;EAAF,CAAa;EAE1B;EAEA,MAAM;IAAEC,MAAF;IAAUC,IAAV;IAAgBC;EAAhB,IAAwBH,IAA9B;EACA,IAAII,OAAO,GAAG,EAAd;;EACA,IAAIF,IAAI,CAACG,MAAT,EAAiB;IACb,KAAK,IAAIC,QAAT,IAAqBJ,IAArB,EAA2B;MACvB,IAAII,QAAQ,CAACC,QAAb,EAAuB;QACnB,KAAK,IAAIC,UAAT,IAAuBF,QAAQ,CAACC,QAAhC,EAA0C;UACtC,MAAM;YAAEE,YAAF;YAAgBC;UAAhB,IAAgCF,UAAtC;UACA,IAAIG,MAAM,GAAG;YACT,gBAAgBF,YADP;YAET,eAAeC;UAFN,CAAb;UAIAN,OAAO,CAACQ,IAAR,CAAaD,MAAb;QACH;MACJ;IACJ;EACJ;;EAED,OAAOV,MAAM,gBAAI;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAJ,GACTG,OAAO,gBACH;IAAK,SAAS,EAAC,KAAf;IAAA,uBACI;MAAK,SAAS,EAAC,QAAf;MAAA,UACKA,OAAO,CAACS,GAAR,CAAY,CAACC,GAAD,EAAMC,KAAN,KAAgB;QACzB,oBACI;UAAI,SAAS,EAAC,IAAd;UAAA,UAAgCD,GAAG,CAACL;QAApC,GAAwBM,KAAxB;UAAA;UAAA;UAAA;QAAA,QADJ;MAGH,CAJA;IADL;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADG,gBAUF,qCAXT;AAaH,CAlCD;;KAAMhB,O;AAoCN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}